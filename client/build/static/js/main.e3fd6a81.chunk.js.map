{"version":3,"sources":["components/PortfolioSection.js","components/TriviaQuestion.js","components/FeedbackSection.js","views/Header.js","views/Footer.js","views/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["props","title","mainContent","bulletPoints","audioUrl","imgSource","className","autoPlay","src","type","map","bullet","ind","style","fontWeight","key","externalLink","href","target","text","info","border","alt","width","height","question","correctChoice","possibleAnswers","useState","selectedAnswers","setSelectedAnswers","curStyles","setCurStyles","selectedRightAnswer","setSelectedRightAnswer","isClickable","setIsClickable","countdown","setCountdown","soundArr","setSoundArr","randomizeAudioFiles","randomIntArr","newSoundArr","k","randIndex","Math","floor","random","length","soundUrl","push","filter","val","useEffect","handleCorrectAnswer","e","newCurStyles","console","log","handleWrongAnswer","newSelectedAnswers","setTimeout","indexOf","sectionNum","document","getElementsByClassName","play","playAudio","onClick","summaryText","comments","setComments","name","setName","comment","setComment","isFormSubmitted","setIsFormSubmitted","errors","setErrors","axios","get","then","res","data","class","item","paddingBottom","marginBottom","onSubmit","preventDefault","post","catch","err","errorResponse","response","placeholder","onChange","value","color","message","rows","cols","Header","id","videoId","Footer","setSectionNum","isShowButtonClicked","setIsShowButtonClicked","addOne","portfolioArr","PortfolioSection","triviaArr","TriviaQuestion","FeedbackSection","slice","App","animation","setAnimation","MainPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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,IAAD,EACc4B,mBAAS,GADvB,mBACfoC,EADe,KACH4C,EADG,OAEgChF,oBAAS,GAFzC,mBAEfiF,EAFe,KAEMC,EAFN,KAKhBC,EAAS,WACXH,EAAc5C,EAAa,IASzBgD,EAAe,CACjB,kBAACC,EAAD,CACIhH,MAAM,uBACNC,YAAY,+NACZE,SAAS,uCACTC,UAAU,sIACVF,aACI,CAEI,CACIgB,KAAM,wBACNC,KAAM,2DAEV,CACID,KAAM,2CACNC,KAAM,gEAEV,CACID,KAAM,oBACNC,KAAM,kCAEV,CACID,KAAM,2BACNC,KAAM,IAEV,CACID,KAAM,oCACNH,aAAc,sDACdI,KAAM,4KAEV,CACID,KAAM,mCACNH,aAAc,+CACdI,KAAM,wNAEV,CACID,KAAM,GACNC,KAAM,OAKtB,kBAAC6F,EAAD,CACIhH,MAAM,+BACNC,YAAY,kPACZE,SAAS,qCACTC,UAAU,sBACVF,aACI,CACI,CACIgB,KAAM,qEACNC,KAAM,6EAEV,CACID,KAAM,gGACNC,KAAM,gGAEV,CACID,KAAM,mHACNC,KAAM,uGAEV,CACID,KAAM,8DACNC,KAAM,8JAEV,CACID,KAAM,mFACNC,KAAM,iHAMtB,kBAAC6F,EAAD,CACIhH,MAAM,yCACNC,YAAY,2KACZE,SAAS,0BACTC,UAAU,sIACVF,aACI,CACI,CACIgB,KAAM,SACNC,KAAM,6FAEV,CACID,KAAM,aACNC,KAAM,kIAEV,CACID,KAAM,kBACNC,KAAM,IAEV,CACID,KAAM,sCACNC,KAAM,4DAEV,CACID,KAAM,uCACNC,KAAM,kCAOpB8F,EAAY,CACd,kBAACC,EAAD,CAAgB1F,SAAS,oFACrBC,cAAc,IACdC,gBACI,CAAC,SACG,uBACA,SACA,uBAERqC,WAAY+C,IAChB,kBAACI,EAAD,CAAgB1F,SAAS,gEACrBC,cAAc,IACdC,gBACI,CAAC,2BACG,2BACA,6BACA,4BAERqC,WAAY+C,IAChB,kBAACI,EAAD,CAAgB1F,SAAS,sDACrBC,cAAc,IACdC,gBACI,CAAC,KACG,IACA,YACA,OAERqC,WAAY+C,IAChB,kBAACK,EAAD,CACI/G,UAAU,8DACViE,YAAY,sKAQpB,OACI,6BACI,kBAAC,EAAD,MACEuC,EAEE7C,EAAagD,EAAa/D,OAAS,EAAI+D,EAAaK,MAAM,EAAGrD,EAAa,GAAKgD,EAD/E,4BAAQ1G,UAAU,UAAU+D,QAzJlB,SAACb,GACnBA,EAAEmC,iBACFmB,GAAuB,KAuJf,QAGHD,GAAuBK,EAAUlD,GACjC6C,GAAuB7C,EAAagD,EAAa/D,OAAS,GAAK,kBAAC,EAAD,QCzT7DqE,MAnCf,WAAgB,IAAD,EACuB1F,mBAAS,GADhC,mBACJ2F,EADI,KACOC,EADP,KAKX,OAFA1D,YAAW,WAAc0D,EAAa,KAAM,MAE1B,IAAdD,EAEI,yBAAKjH,UAAU,OACX,yBAAKA,UAAU,gBACX,yBAAKE,IAAI,6HAA6Hc,IAAI,OAYtJ,yBAAKhB,UAAU,OACX,kBAACmH,EAAD,QClBQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFhE,SAASiE,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlD,MAAK,SAAAmD,GACJA,EAAaC,gBAEd1C,OAAM,SAAA2C,GACL9E,QAAQ8E,MAAMA,EAAMnC,c","file":"static/js/main.e3fd6a81.chunk.js","sourcesContent":["import React from 'react';\n\nexport default (props) => {\n    const { title, mainContent, bulletPoints, audioUrl, imgSource } = props; // Destructuring so we get the field names immediately\n\n    // This needs SIGNIFICANT reorganizing in terms of CSS, HTML, etc.\n    return (\n        <div className=\"portfolioSection\">\n            <div>\n                <h2>{title}</h2>\n                <p>{mainContent}</p>\n                <audio className=\"audio-component\" autoPlay={true}>\n                    <source src={audioUrl} type=\"audio/mpeg\" />\n                </audio>\n            </div>\n            <div className=\"section\">\n                <div>\n\n                    {bulletPoints.map((bullet, ind) => {\n                        return (\n                            <div>\n                                <br />\n                                <br />\n                                <span style={{ fontWeight: \"bold\" }} key={ind}>\n                                    {bullet?.externalLink ? <a href={bullet.externalLink} target=\"_blank\">{bullet.text}</a> : bullet.text}<br />\n                                </span>\n                                <span>\n                                    {bullet.info}\n                                </span>\n                            </div>\n\n                        );\n                    })}\n\n\n                </div>\n                <div className=\"imgDiv\">\n                    <img style={{ border: \"2px solid black\" }} src={imgSource} alt=\"SectionImage\" width=\"200\" height=\"200\"></img>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport '../css/Trivia.css';\n\nexport default (props) => {\n    const {question, correctChoice, possibleAnswers} = props; // Destructuring so we get the field names immediately\n    // const letterArr = [\"A\", \"B\", \"C\", \"D\"];\n    const [selectedAnswers, setSelectedAnswers] = useState([false, false, false, false]);\n    const [curStyles, setCurStyles] = useState([\"unpicked\",\"unpicked\",\"unpicked\",\"unpicked\"])\n    const [selectedRightAnswer, setSelectedRightAnswer] = useState(false); // Boolean for determining if user picked right answer\n    const [isClickable, setIsClickable] = useState(true); // Allow each answer to be clicked\n    const [countdown, setCountdown] = useState(0); // 2-second timer\n    const [soundArr,setSoundArr] = useState([]);\n\n    const randomizeAudioFiles = () => {\n        let randomIntArr = [1,2,3,4,5];\n        const newSoundArr = [];\n        for (let k = 0; k < 4; k++) { // Pick four sound files randomly\n            const randIndex = Math.floor(Math.random()*randomIntArr.length);\n            const randVal = randomIntArr[randIndex];\n            // console.log(\"Index = \"+randIndex+\", value = \"+randVal);\n            const soundUrl = \"/incorrectAudio/incorrect\"+randVal+\".mp3\";\n            newSoundArr.push(soundUrl);\n            randomIntArr = randomIntArr.filter((val,ind) => {return ind !== randIndex});\n            // console.log(randomIntArr);\n        }\n        setSoundArr(newSoundArr);\n    }\n\n    useEffect(() => {\n        randomizeAudioFiles();\n    }, []);\n\n    const handleCorrectAnswer = (e, ind) => {\n        if (isClickable) {\n            let newCurStyles = [...curStyles];\n            newCurStyles[ind] = \"finalAnswer\";\n            setCurStyles(newCurStyles);\n            setSelectedRightAnswer(true);\n            setCountdown(2); // Two-second countdown    \n        }\n        console.log(\"Correct!!!\");\n    }\n\n    const handleWrongAnswer = (e,ind) => {\n        if (!selectedAnswers[ind] && isClickable) { // If answer was not selected before AND you can click on it\n            console.log(\"WRONG!\");\n            let newSelectedAnswers = [...selectedAnswers];\n            newSelectedAnswers[ind] = true;\n            setSelectedAnswers(newSelectedAnswers);\n            let newCurStyles = [...curStyles];\n            newCurStyles[ind] = \"finalAnswer\";\n            setCurStyles(newCurStyles);\n            setIsClickable(false); // Temporarily stop answers from getting clicked as answer goes to orange\n            setCountdown(2);\n        }\n    }\n\n    const playAudio = (ind) => { // (url is in the audio tag in the HTML)\n        const audioEl = document.getElementsByClassName(\"audio-element\")[ind];\n        // console.log(audioEl);\n        audioEl.play();\n    }\n\n    useEffect(() => {\n        countdown > 0 && setTimeout(() => setCountdown(countdown-1), 1000);\n        if (countdown === 0) {\n            const ind = curStyles.indexOf(\"finalAnswer\");\n            setIsClickable(true); // Make buttons clickable after countdown is over\n            if (ind > -1) {\n                if (selectedRightAnswer) { // Picked right answer\n                    props.sectionNum(); // Increment section number (lift state here)\n                    // Reset variables for next question\n                    setSelectedAnswers([false, false, false, false]); // Needed for remaining sections - won't render correctly otherwise\n                    // setNumPicked(0);\n                    setSelectedRightAnswer(false);\n                    setCurStyles([\"unpicked\",\"unpicked\",\"unpicked\",\"unpicked\"]);\n                    randomizeAudioFiles();\n                } else { // Picked wrong answer\n                    let newCurStyles = [...curStyles];\n                    playAudio(ind); // Play audio file saying person is incorrect\n                    newCurStyles[ind] = \"wrongAnswer\";\n                    setCurStyles(newCurStyles);\n                }\n            }\n        }\n    }, [countdown]);\n\n    // The audio HAS to be in the public folder - it does make it accessible to anyone looking, so be careful not store\n    // sensitive stuff there!  For example, anybody can type url/audio/incorrect1.mp3 and they can play it for themselves.\n\n    /*\n\n    <audio className=\"audio-element\">\n                            <source src={soundArr[ind]} type=\"audio/mpeg\" ></source>\n                        </audio>\n                        */\n    // src={\"audio/incorrect\"+tempVal+\".mp3\"} seems OK mostly - still \"hard-coded\"\n    // Hard-coding it works fine\n    // Linking to an array like below:\n\n    // const tempUrl = [\"https://static.wikia.nocookie.net/feheroes_gamepedia_en/images/a/a6/VOICE_Sigurd_Destined_Duo_SPECIAL_1.wav/revision/latest?cb=20200907055835\",\n    // \"https://static.wikia.nocookie.net/feheroes_gamepedia_en/images/e/ee/VOICE_Sigurd_Destined_Duo_RELIANCE_2.wav/revision/latest?cb=20200907055719\",\n    // \"https://static.wikia.nocookie.net/feheroes_gamepedia_en/images/9/98/VOICE_Sigurd_Destined_Duo_SPECIAL_2.wav/revision/latest?cb=20200907055838\",\n    // \"https://static.wikia.nocookie.net/feheroes_gamepedia_en/images/5/50/VOICE_Sigurd_Destined_Duo_RELIANCE_17.wav/revision/latest?cb=20200907055816\"];\n\n    // {tempUrl[ind]} is OK\n\n\n    // To do: perhaps simplify the CSS for the hexagons for the answers\n    // Get the big hexagon to work for the question\n    // Align the text in the answers so it's centered vertically\n\n    /*\n    {possibleAnswers.map((answerChoice,ind) => {\n                const curLetterChoice = letterArr[ind];\n                console.log(soundArr[ind]);\n                return(\n                    <div onClick={e => {\n                        curLetterChoice === correctChoice ? handleCorrectAnswer(e,ind) : handleWrongAnswer(e,ind)\n                    }} \n                        className={\"hexagon \"+curStyles[ind]}\n                        key={ind}>\n                        <audio className=\"audio-element\">\n                            <source src={soundArr[ind]} type=\"audio/mpeg\" ></source>\n                        </audio>\n                        {curLetterChoice + \": \" + answerChoice}\n                    </div>\n                );\n            })}\n    */\n    return(\n        <div>\n            \n            <div className=\"hexagonQuestion\"><p>{question}</p></div>\n            <div className=\"allAnswers\">\n                <div className=\"answerRow\">\n                    <div \n                        className={\"hexagon \"+curStyles[0]}\n                        onClick={e => {\"A\" === correctChoice ? handleCorrectAnswer(e,0) : handleWrongAnswer(e,0)}}\n                    >\n                        <audio className=\"audio-element\">\n                            <source src={soundArr[0]} type=\"audio/mpeg\" ></source>\n                        </audio>\n                        {\"A: \" + possibleAnswers[0]}\n                    </div>\n                    <div \n                        className={\"hexagon \"+curStyles[1]}\n                        onClick={e => {\"B\" === correctChoice ? handleCorrectAnswer(e,1) : handleWrongAnswer(e,1)}}\n                    >\n                        <audio className=\"audio-element\">\n                            <source src={soundArr[1]} type=\"audio/mpeg\" ></source>\n                        </audio>\n                        {\"B: \" + possibleAnswers[1]}\n                    </div>\n                </div>\n                <div className=\"answerRow\">\n                    <div \n                        className={\"hexagon \"+curStyles[2]}\n                        onClick={e => {\"C\" === correctChoice ? handleCorrectAnswer(e,2) : handleWrongAnswer(e,2)}}\n                    >\n                        <audio className=\"audio-element\">\n                            <source src={soundArr[2]} type=\"audio/mpeg\" ></source>\n                        </audio>\n                        {\"C: \" + possibleAnswers[2]}\n                    </div>\n                    <div \n                        className={\"hexagon \"+curStyles[3]}\n                        onClick={e => {\"D\" === correctChoice ? handleCorrectAnswer(e,3) : handleWrongAnswer(e,3)}}\n                    >\n                        <audio className=\"audio-element\">\n                            <source src={soundArr[3]} type=\"audio/mpeg\" ></source>\n                        </audio>\n                        {\"D: \" + possibleAnswers[3]}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../css/Feedback.css';\n\nexport default (props) => {\n    const { imgSource, summaryText } = props;\n    const [comments, setComments] = useState([]);\n    const [name, setName] = useState(\"\");\n    const [comment, setComment] = useState(\"\");\n    const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n    const [errors, setErrors] = useState({});\n\n    // On page load ONLY, retrieve the messages from the database\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/comments\")\n            .then(res => {\n                setComments(res.data); // Get list of comments and set it\n                // setIsLoaded(true); // Data loaded successfully\n            })\n    }, [comments])\n\n    const handleForm = (e) => {\n        e.preventDefault();\n        axios.post('http://localhost:8000/api/comments/new',\n            { name, comment })\n            .then(res => {\n                console.log(\"Successful submission\");\n                console.log(res);\n                setIsFormSubmitted(true);\n            })\n            .catch(err => {\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n                // Set Errors\n                setErrors(errorResponse);\n            });\n    }\n\n    return (\n        <div className=\"bttm-container\">\n\n            <div class=\"example1\">\n                <h3>{summaryText} </h3>\n            </div>\n\n            <audio className=\"audio-element\" autoPlay=\"true\">\n                {/* Here you will change the name of the audio file */}\n                <source src=\"/audio/thankyoufortakingthetime.mp3\" type=\"audio/mpeg\"></source>\n            </audio>\n\n            <div className=\"prevFeedback\">\n                <h2>Feedback:</h2>\n                {comments.map((item, ind) => {\n                    return (\n                        <div>\n                            <span style={{ fontWeight: \"bold\" }}>{item.name} :</span> <span>{item.comment}</span>\n                        </div>\n\n                    );\n                })}\n            </div>\n            {isFormSubmitted ?\n                <h3 style={{ paddingBottom: \"10px\" }}>Thank you for your feedback!</h3> :\n                <form style={{ marginBottom: \"20px\" }} onSubmit={handleForm}>\n                    <p>\n                        <input placeholder=\"Name\" className=\"nameInput\" type=\"text\" onChange={(e) => setName(e.target.value)} /><br />\n                        {errors?.name && <span style={{ color: \"red\" }}>{errors.name?.message}</span>}\n                    </p>\n                    <p>\n                        <textarea placeholder=\"Comment\" className=\"textInput\" rows=\"5\" cols=\"60\" onChange={(e) => setComment(e.target.value)} /><br />\n                        {errors?.comment && <span style={{ color: \"red\" }}>{errors.comment?.message}</span>}\n                    </p>\n                    <button className=\"commentBtn\" type=\"submit\">Submit</button>\n                </form>\n            }\n\n\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport '../css/Header.css'\n// import '../css/LoadingAnimation.css';\nimport YouTube from 'react-youtube'; // Make sure to do \"npm i react-youtube\"!\n// import ReactCSSTransitionGroup from 'react-transition-group'; // Make sure to do \"npm i\"\n\n\nconst Header = (props) => {\n    // const [time, setTime] = useState(0);\n\n    // setTimeout(()=>{\n    //     setTime(1);\n    // }, 1000)\n\n    // if (time === 1) { // When time is up (after 1 second)\n    //     // Play audio file at this point\n\n    // }\n\n    return (\n        <div className=\"container\">\n\n            <div className=\"topnav\" id=\"myTopnav\">\n                <div class=\"logoDiv\">\n                    <p>Adrian Barnard</p>\n                </div>\n                <div className=\"menu-links\">\n                    {/* Change the links below as appropriate */}\n                    <a href=\"#\">Resume</a>\n                    <a href=\"mailto:pabarnard@outlook.com\">Email</a>\n                    <a href=\"https://github.com/pbarnard1\">GitHub</a>\n                    <a href=\"https://www.linkedin.com/in/tural-hasanli-90910a118/\">LinkedIn</a>\n                </div>\n            </div>\n            <div className=\"youtubeIntroduction\"  >\n                {/* Change the ID of the video and change the message here as appropriate */}\n                <div className=\"introduction\">\n                    <p>Hello. This portfolio is a culmination of my life's work and passions. I hope to guide you through an experience, of which in the end, you know me better and can assert that I would be a pretty nifty dinner guest.</p>\n                </div>\n                <div>\n                    <YouTube videoId=\"6caW0EDswRY\" className=\"youtube\" />\n                </div>\n\n                <audio className=\"audio-element\" autoPlay={true}>\n                    {/* Here you will change the name of the audio file */}\n                    <source src=\"/audio/welcomeAdrians.mp3\" type=\"audio/mpeg\"></source>\n                </audio>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;","import React, { useState, useEffect } from 'react';\n\nimport ThankYouAnimation from '../components/ThankYouAnimation'\n\n\nconst Footer = (props) => {\n\n    return (\n        <div className=\"container-footer\">\n            <div class=\"topnav\" id=\"myTopnav\">\n                <div class=\"menu-links\">\n                    {/* Change contact information below */}\n                    <a href=\"#\">Resume</a>\n                    <a href=\"mailto: tural.tech@gmail.com\">Email</a>\n                    <a href=\"https://github.com/thasanli\">GitHub</a>\n                    <a href=\"https://www.linkedin.com/in/tural-hasanli-90910a118/\">LinkedIn</a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React, { useEffect, useState } from 'react';\nimport PortfolioSection from '../components/PortfolioSection';\nimport TriviaQuestion from '../components/TriviaQuestion';\nimport FeedbackSection from '../components/FeedbackSection';\nimport Header from './Header';\nimport Footer from './Footer';\n\n/*\n\nimport React, { useEffect, useState } from 'react';\nimport PortfolioSection from '../components/PortfolioSection';\nimport TriviaQuestion from '../components/TriviaQuestion';\nimport FeedbackSection from '../components/FeedbackSection';\nimport Header from './Header';\nimport Footer from './Footer';\n\nexport default (props) => {\n    const [sectionNum, setSectionNum] = useState(0);\n    const [isShowButtonClicked, setIsShowButtonClicked] = useState(false);\n\n    // Function that will reveal sections one at a time\n    const addOne = () => {\n        setSectionNum(sectionNum+1);\n    }\n\n    const openPortfolio = (e) => {\n        e.preventDefault();\n        setIsShowButtonClicked(true);\n    }\n\n    // Array containing each section, PLUS the summary and eventually the comment box\n    const portfolioArr = [\n        <PortfolioSection \n            title=\"Technical experience\" \n            mainContent=\"Adrian has matured in an age of technological wonders, varied and everchanging. He is adept with both the hard skills and soft skills needed to design software and control product developement as well as data engineering\"\n            audioUrl=\"/audio/techincalexperiencequotes.mp3\" // Audio file to play upon loading this session\n            imgSource=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/The_Earth_seen_from_Apollo_17.jpg/800px-The_Earth_seen_from_Apollo_17.jpg\" // URL to image to display in that section\n            bulletPoints={\n                [ // Array of objects - each object is a separate bullet point\n\n                    {\n                        text: \"Programming Languages\", // Actual text that goes next to bullet point\n                        info: \"JavaScript, Java, Python, MATLAB, HTML, CSS, SQL, Excel\" // Explanation that goes below the bullet point\n                    },\n                    {\n                        text: \"Experience With Frameworks And Libraries\",\n                        info: \"Django, Spring Boot, React, jQuery, Bootstrap, Maven, Bcrypt\"\n                    },\n                    {\n                        text: \"Server Structures\",\n                        info: \"MySql, SQLite, MongoDB (NoSQL)\"\n                    },\n                    {\n                        text: \"Contribution To Projects\",\n                        info: \"\"\n                    },\n                    {\n                        text: \"Fire Emblem Heroes - Hero Tracker\",\n                        externalLink: \"https://github.com/pbarnard1/feh_collection_project\", // Link to site (OPTIONAL)\n                        info: \"Worked as a Full Stack Developer on an app that helps one keep track of all the heroes summoned in Fire Emblem Heroes, a mobile game.  Developed with Python and Django.\"\n                    },\n                    {\n                        text: \"Fire Emblem Heroes - Orb Tracker\",\n                        externalLink: \"https://github.com/pbarnard1/feh_orb_tracker\",\n                        info: \"Created an app to keep track of all the orbs, a unit of currency in the game, that one can obtain for free every day - includes the ability to calculate the number of orbs between two dates.  Developed with Java.\"\n                    },\n                    {\n                        text: \"\",\n                        info: \"\"\n                    },\n                ]\n            }\n        />,\n        <PortfolioSection \n            title=\"Career History and Education\" \n            mainContent=\"Adrian graduated from The University of Arizona with a 4.0 GPA; from there, he left a blazing trail of accomplishments and successful team projects. It is just the beginning of his journey on a path that will make the world a better place.\" \n            audioUrl=\"/audio/careerhistorybackground.mp3\"\n            imgSource=\"./tutoringImage.jpg\" // URL to image to display in that section\n            bulletPoints={\n                [\n                    {\n                        text: \"Coding Dojo - Full-Stack Developer Certificate; Seattle, WA (2020)\",\n                        info: \"Full-time Online Training Program in Python, Java and JavaScript (React).\"\n                    },\n                    {\n                        text: \"The University of Arizona - Master of Science in Atmospheric Sciences; Tucson, AZ (2010-2012)\",\n                        info: \"Used MATLAB to study tropical waves in the Pacific to understand how tropical cyclones form.\"\n                    },\n                    {\n                        text: \"University of Washington - Two Bachelor’s Degrees in Atmospheric Sciences and ACMS; Seattle, WA (2006-2010)\",\n                        info: \"Includes courses in AMATH 301, which teaches MATLAB, CSE 142 and CSE 143, both of which teach Java.\"\n                    },\n                    {\n                        text: \"Private math tutor - self-employed; Seattle, WA (2012-2020)\",\n                        info: \"Tutored over 150 students in math courses, ranging from pre-calculus to calculus to more advanced courses such as differential equations.  Tutored MATLAB.\"\n                    },\n                    {\n                        text: \"Teaching assistant and tutor - The University of Arizona; Tucson, AZ (2010-2012)\",\n                        info: \"Tutored algebra through calculus at Think Tank, a center where students come for help in various subjects.\"\n                    }\n                ] \n            }\n            // \n        />,\n        <PortfolioSection \n            title=\"Skills, Attributes and Accomplishments\"\n            mainContent='If you asked Adrian, what was his most redeeming quality, he would immediately reply, \"I am a good team player. I will do whatever is needed of me to get the job done.\"' \n            audioUrl=\"/audio/skillsspeech.mp3\"\n            imgSource=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/The_Earth_seen_from_Apollo_17.jpg/800px-The_Earth_seen_from_Apollo_17.jpg\" // URL to image to display in that section\n            bulletPoints={\n            [\n                {\n                    text: \"Skills\",\n                    info: \"Programming, data analysis, mathematics, design, project management, teaching, presenting\"\n                },\n                {\n                    text: \"Attributes\",\n                    info: \"Flexible, team player, responsible, punctual, computer literate, detail-oriented, accountable, active listener, problem solver\"\n                },\n                {\n                    text: \"Accomplishments\",\n                    info: \"\"\n                },\n                {\n                    text: \"Triple black belts from Coding Dojo\",\n                    info: \"Black belts are awarded for high scores in each program.\"\n                },\n                {\n                    text: \"4.0 GPA at The University of Arizona\",\n                    info: \"Earned an A in each class.\"\n                }\n            ]\n        } />,\n    ];\n\n    // Array of trivia questions\n    const triviaArr = [\n        <TriviaQuestion question='What role did Adrian take on for his project \"Fire Emblem Heroes - Hero Tracker\"?'\n            correctChoice=\"B\" // A, B, C or D\n            possibleAnswers={\n                [\"Archer\", // Choice A\n                \"Full Stack Developer\", // Choice B\n                \"Healer\", // Choice C\n                \"A Broke Orb Spender\"] // Choice D\n            }\n            sectionNum={addOne} />,\n        <TriviaQuestion question=\"Adrian was a scholar of which three languages at Coding Dojo?\"\n            correctChoice=\"A\"\n            possibleAnswers={\n                [\"Java, JavaScript (React), Python\",\n                \"German, Spanish, Swahili\",\n                \"Binary, Octal, Hexadecimal\",\n                \"FORTRAN, BASIC, Assembly\"]\n            }\n            sectionNum={addOne} />,\n        <TriviaQuestion question=\"What was Adrian's GPA at The University of Arizona?\"\n            correctChoice=\"D\"\n            possibleAnswers={\n                [\"42\",\n                \"i\",\n                \"Over 9000\",\n                \"4.0\"]\n            }\n            sectionNum={addOne} />,\n        <FeedbackSection \n            imgSource=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/The_Earth_seen_from_Apollo_17.jpg/800px-The_Earth_seen_from_Apollo_17.jpg\" // Link to image goes here\n            summaryText=\"I hope you enjoyed the website. It was my pleasure creating it and presenting this information to you. Please feel free to contact me and leave a comment below.\" // Text that goes below the image \n        />\n    ];\n\n    // useEffect(() => {\n    //     setSectionNum(0);\n    // }, [])\n\n    return(\n        <div>\n            <Header />\n            {!isShowButtonClicked ? \n            <button onClick={openPortfolio}>Show</button> :\n            sectionNum < portfolioArr.length - 1 ? portfolioArr.slice(0,sectionNum+1) : portfolioArr\n            }\n            {isShowButtonClicked && triviaArr[sectionNum]}\n            {isShowButtonClicked && sectionNum > portfolioArr.length - 1 && <Footer />}\n        </div>\n    );\n}\n\n*/\n\n\nexport default (props) => {\n    const [sectionNum, setSectionNum] = useState(0);\n    const [isShowButtonClicked, setIsShowButtonClicked] = useState(false);\n\n    // Function that will reveal sections one at a time\n    const addOne = () => {\n        setSectionNum(sectionNum + 1);\n    }\n\n    const openPortfolio = (e) => {\n        e.preventDefault();\n        setIsShowButtonClicked(true);\n    }\n\n    // Array containing each section, PLUS the summary and eventually the comment box\n    const portfolioArr = [\n        <PortfolioSection\n            title=\"Technical experience\"\n            mainContent=\"Adrian has matured in an age of technological wonders, varied and everchanging. He is adept with both the hard skills and soft skills needed to design software and control product developement as well as data engineering\"\n            audioUrl=\"/audio/techincalexperiencequotes.mp3\" // Audio file to play upon loading this session\n            imgSource=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/The_Earth_seen_from_Apollo_17.jpg/800px-The_Earth_seen_from_Apollo_17.jpg\" // URL to image to display in that section\n            bulletPoints={\n                [ // Array of objects - each object is a separate bullet point\n\n                    {\n                        text: \"Programming Languages\", // Actual text that goes next to bullet point\n                        info: \"JavaScript, Java, Python, MATLAB, HTML, CSS, SQL, Excel\" // Explanation that goes below the bullet point\n                    },\n                    {\n                        text: \"Experience With Frameworks And Libraries\",\n                        info: \"Django, Spring Boot, React, jQuery, Bootstrap, Maven, Bcrypt\"\n                    },\n                    {\n                        text: \"Server Structures\",\n                        info: \"MySql, SQLite, MongoDB (NoSQL)\"\n                    },\n                    {\n                        text: \"Contribution To Projects\",\n                        info: \"\"\n                    },\n                    {\n                        text: \"Fire Emblem Heroes - Hero Tracker\",\n                        externalLink: \"https://github.com/pbarnard1/feh_collection_project\", // Link to site (OPTIONAL)\n                        info: \"Worked as a Full Stack Developer on an app that helps one keep track of all the heroes summoned in Fire Emblem Heroes, a mobile game.  Developed with Python and Django.\"\n                    },\n                    {\n                        text: \"Fire Emblem Heroes - Orb Tracker\",\n                        externalLink: \"https://github.com/pbarnard1/feh_orb_tracker\",\n                        info: \"Created an app to keep track of all the orbs, a unit of currency in the game, that one can obtain for free every day - includes the ability to calculate the number of orbs between two dates.  Developed with Java.\"\n                    },\n                    {\n                        text: \"\",\n                        info: \"\"\n                    },\n                ]\n            }\n        />,\n        <PortfolioSection\n            title=\"Career History and Education\"\n            mainContent=\"Adrian graduated from The University of Arizona with a 4.0 GPA; from there, he left a blazing trail of accomplishments and successful team projects. It is just the beginning of his journey on a path that will make the world a better place.\"\n            audioUrl=\"/audio/careerhistorybackground.mp3\"\n            imgSource=\"./tutoringImage.jpg\" // URL to image to display in that section\n            bulletPoints={\n                [\n                    {\n                        text: \"Coding Dojo - Full-Stack Developer Certificate; Seattle, WA (2020)\",\n                        info: \"Full-time Online Training Program in Python, Java and JavaScript (React).\"\n                    },\n                    {\n                        text: \"The University of Arizona - Master of Science in Atmospheric Sciences; Tucson, AZ (2010-2012)\",\n                        info: \"Used MATLAB to study tropical waves in the Pacific to understand how tropical cyclones form.\"\n                    },\n                    {\n                        text: \"University of Washington - Two Bachelor’s Degrees in Atmospheric Sciences and ACMS; Seattle, WA (2006-2010)\",\n                        info: \"Includes courses in AMATH 301, which teaches MATLAB, CSE 142 and CSE 143, both of which teach Java.\"\n                    },\n                    {\n                        text: \"Private math tutor - self-employed; Seattle, WA (2012-2020)\",\n                        info: \"Tutored over 150 students in math courses, ranging from pre-calculus to calculus to more advanced courses such as differential equations.  Tutored MATLAB.\"\n                    },\n                    {\n                        text: \"Teaching assistant and tutor - The University of Arizona; Tucson, AZ (2010-2012)\",\n                        info: \"Tutored algebra through calculus at Think Tank, a center where students come for help in various subjects.\"\n                    }\n                ]\n            }\n        // \n        />,\n        <PortfolioSection\n            title=\"Skills, Attributes and Accomplishments\"\n            mainContent='If you asked Adrian, what was his most redeeming quality, he would immediately reply, \"I am a good team player. I will do whatever is needed of me to get the job done.\"'\n            audioUrl=\"/audio/skillsspeech.mp3\"\n            imgSource=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/The_Earth_seen_from_Apollo_17.jpg/800px-The_Earth_seen_from_Apollo_17.jpg\" // URL to image to display in that section\n            bulletPoints={\n                [\n                    {\n                        text: \"Skills\",\n                        info: \"Programming, data analysis, mathematics, design, project management, teaching, presenting\"\n                    },\n                    {\n                        text: \"Attributes\",\n                        info: \"Flexible, team player, responsible, punctual, computer literate, detail-oriented, accountable, active listener, problem solver\"\n                    },\n                    {\n                        text: \"Accomplishments\",\n                        info: \"\"\n                    },\n                    {\n                        text: \"Triple black belts from Coding Dojo\",\n                        info: \"Black belts are awarded for high scores in each program.\"\n                    },\n                    {\n                        text: \"4.0 GPA at The University of Arizona\",\n                        info: \"Earned an A in each class.\"\n                    }\n                ]\n            } />,\n    ];\n\n    // Array of trivia questions\n    const triviaArr = [\n        <TriviaQuestion question='What role did Adrian take on for his project \"Fire Emblem Heroes - Hero Tracker\"?'\n            correctChoice=\"B\" // A, B, C or D\n            possibleAnswers={\n                [\"Archer\", // Choice A\n                    \"Full Stack Developer\", // Choice B\n                    \"Healer\", // Choice C\n                    \"A Broke Orb Spender\"] // Choice D\n            }\n            sectionNum={addOne} />,\n        <TriviaQuestion question=\"Adrian was a scholar of which three languages at Coding Dojo?\"\n            correctChoice=\"A\"\n            possibleAnswers={\n                [\"Java, JavaScript, Python\",\n                    \"German, Spanish, Swahili\",\n                    \"Binary, Octal, Hexadecimal\",\n                    \"FORTRAN, BASIC, Assembly\"]\n            }\n            sectionNum={addOne} />,\n        <TriviaQuestion question=\"What was Adrian's GPA at The University of Arizona?\"\n            correctChoice=\"D\"\n            possibleAnswers={\n                [\"42\",\n                    \"i\",\n                    \"Over 9000\",\n                    \"4.0\"]\n            }\n            sectionNum={addOne} />,\n        <FeedbackSection\n            imgSource=\"https://media4.giphy.com/media/3oz8xAK4QDq8UqLNp6/giphy.gif\" // Link to image goes here\n            summaryText=\"I hope you enjoyed the website. It was my pleasure creating it and presenting this information to you. Please feel free to contact me and leave a comment below.\" // Text that goes below the image \n        />\n    ];\n\n    // useEffect(() => {\n    //     setSectionNum(0);\n    // }, [])\n\n    return (\n        <div>\n            <Header />\n            {!isShowButtonClicked ?\n                <button className=\"showBtn\" onClick={openPortfolio}>Show</button> :\n                sectionNum < portfolioArr.length - 1 ? portfolioArr.slice(0, sectionNum + 1) : portfolioArr\n            }\n            {isShowButtonClicked && triviaArr[sectionNum]}\n            {isShowButtonClicked && sectionNum > portfolioArr.length - 1 && <Footer />}\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport './App.css';\nimport MainPage from './views/MainPage';\n// import Header from './views/Header';\n// import Footer from './views/Footer';\n// import ThankYou from './components/ThankYouAnimation';\n\n// Tural's\nfunction App() {\n    const [animation, setAnimation] = useState(0);\n\n    setTimeout(function () { setAnimation(1) }, 2500);\n\n    if (animation === 0) {\n        return (\n            <div className=\"App\">\n                <div className=\"animationGif\">\n                    <img src=\"https://media4.giphy.com/media/14c0YMK7oEVs0o/giphy.gif?cid=ecf05e4776154f5aadf822b6b6e41d9e95c99308247496ec&rid=giphy.gif\" alt=\"\" />\n                </div>\n\n            </div>\n        );\n    }\n    /*\n    <Header />\n    <Footer />\n    <ThankYou />\n    */\n    return (\n        <div className=\"App\">\n            <MainPage />\n        </div>\n    );\n}\n\n// function App() {\n//     return (\n//         <div className=\"App\">\n//             <MainPage />\n//         </div>\n//     );\n// }\n\nexport default App;\n\n// From Tural:\n\n/*\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LoadingAnimation from './components/LoadingAnimation';\nimport Header from './views/Header'\n\n\n\nfunction App() {\n    const [animation, setAnimation] = useState(0)\n\n    setTimeout(function () { setAnimation(1) }, 2500);\n\n    // Show animation page for 2.5 seconds\n    if (animation === 0) {\n        return(\n            <div className=\"App\">\n                <LoadingAnimation />\n            </div>\n        );\n    }\n\n    // After animation is over, load the main page\n    return(\n        <div className=\"App\">\n            <Header />\n        </div>\n    );\n}\n\nexport default App;\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}